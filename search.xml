<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>随心所欲</title>
    <url>/2021/05/08/memo/memo/</url>
    <content><![CDATA[<h1 id="finally"><a href="#finally" class="headerlink" title="finally"></a>finally</h1><p>三年的感情喂条狗都不会这样吧，</p>
<p>三年的每一天越想越觉得恶心。</p>
<p>瞎了狗眼了。</p>
<p>没有你现在我真的好开心。</p>
<p>笑死了，你可真是个好前女友呢，好前女友做给谁看呢笑死。</p>
<p>原来我才发现我不是唯一一个视奸怪呢，不过微博经常访问记录没办法删呢，呜呜，今天又像以前一样下贱点了进去呢~ 以后不会了呢。希望你也别来视奸了哦，这里是我的情绪的垃圾堆，别臭到你了呢。</p>
<p>顺便提一嘴，我从来没有给任何人说过你的一句不好哦，我都是拼了命维护你，以后也不会。你要怎样你随便，反正我都无所谓了，和你的小姐妹说说我这不好那不好，我们csx最棒了呢！反正你一直挺擅长的。</p>
<p>听郑敬儒唱巫堵的一瞬间一切都如释重负了，这种感觉真好。</p>
<p>可我根本感受不到你在关心我，如果这段时间你能和我说说话该多好。反正我知道你不会回来啦，试着用再一次伤害你的方式扮演一个伤害者的角色，让自己心里好受点，我的目的达到了，但是要对你说句抱歉了。别放在心上，我只是在宣泄情绪罢了。这下我想你应该不会来了吧，写下的那些情绪被你看见还感觉挺可悲的。又一次把事情搞砸了呢，其实也不算，反正你不会回来了，我也放不下，我也不希望你再悄悄关心我。彻底讨厌我向前走吧，这是我的心里话，希望你开心。</p>
<h2 id="2021-05-27"><a href="#2021-05-27" class="headerlink" title="2021-05-27"></a>2021-05-27</h2><h3 id="刘西安离职有感"><a href="#刘西安离职有感" class="headerlink" title="刘西安离职有感"></a>刘西安离职有感</h3><p>权利与利益不是自上而下施舍的，而是从下向上呐喊反抗斗争而来的。反抗是要流血的，刘兄倒在了这条路上，在斗争的路上牺牲了自己的利益，换来了每个人应得的权利。在压迫中每个人都沉默隐忍着，怕牺牲更多自己的利益，刘兄舍生取义，杀身成仁，敬佩刘兄。遥祝刘兄未来一帆风顺。</p>
]]></content>
      <categories>
        <category>memo</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>job</title>
    <url>/2021/05/24/memo/job/</url>
    <content><![CDATA[<h1 id="成都岗位大盘鸡"><a href="#成都岗位大盘鸡" class="headerlink" title="成都岗位大盘鸡"></a>成都岗位大盘鸡</h1><ol>
<li><p>[成都][15K-20K] ThoughtWorks Java 后端、前端[一天面试完，一天拿 offer]</p>
<p><a href="https://www.v2ex.com/t/778838#reply2">链接</a></p>
</li>
<li><p>研发协同服务域 ROMAFactory-ROMAAPI 宋德志</p>
</li>
</ol>
]]></content>
      <categories>
        <category>memo</category>
      </categories>
      <tags>
        <tag>岗位</tag>
      </tags>
  </entry>
  <entry>
    <title>java</title>
    <url>/2021/01/29/java/java/</url>
    <content><![CDATA[<h1 id="Optional"><a href="#Optional" class="headerlink" title="Optional"></a>Optional</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> String <span class="title">B</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;B()...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;B&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String... args)</span> </span>&#123;</span><br><span class="line">    System.out.println(Optional.ofNullable(<span class="string">&quot;A&quot;</span>).orElse(B()));</span><br><span class="line">    System.out.println(Optional.ofNullable(<span class="string">&quot;A&quot;</span>).orElseGet(() -&gt; B()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">B()...</span><br><span class="line">A</span><br><span class="line">A</span><br></pre></td></tr></table></figure>

<p>源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">orElse</span><span class="params">(T other)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> value != <span class="keyword">null</span> ? value : other;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">orElseGet</span><span class="params">(Supplier&lt;? extends T&gt; other)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value != <span class="keyword">null</span> ? value : other.get();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ofNullable返回值相等</p>
<ul>
<li>ofNullable不管是不是null，orElse或者orElseGet一定会调用，B()一定会执行，但是lambda只会在null时才会执行。</li>
</ul>
<p>orElse参数是泛型T类型的值，orELseGet则为lambda。</p>
<p>所以两者null时情形差不多，非null时希望后面执行则orElse，否则orElseGet</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s学习</title>
    <url>/2021/04/05/tool/k8s/</url>
    <content><![CDATA[<h1 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h1><h2 id="1-1-Pod"><a href="#1-1-Pod" class="headerlink" title="1.1 Pod"></a>1.1 Pod</h2><ol>
<li>一个pod包含多个容器(sideCar模式)</li>
<li>Pod控制器——Deployment</li>
</ol>
<h2 id="1-2-Name"><a href="#1-2-Name" class="headerlink" title="1.2 Name"></a>1.2 Name</h2><ul>
<li>name</li>
<li>namespace</li>
</ul>
<h2 id="1-3-Label"><a href="#1-3-Label" class="headerlink" title="1.3 Label"></a>1.3 Label</h2><ul>
<li>label</li>
<li>label选择器</li>
</ul>
<h2 id="1-4-Service-Ingress"><a href="#1-4-Service-Ingress" class="headerlink" title="1.4 Service Ingress"></a>1.4 Service Ingress</h2><p>问题：Pod ip地址 变化</p>
<h1 id="2-核心组件"><a href="#2-核心组件" class="headerlink" title="2. 核心组件"></a>2. 核心组件</h1><h2 id="2-1-etcd—配置存储中心"><a href="#2-1-etcd—配置存储中心" class="headerlink" title="2.1 etcd—配置存储中心"></a>2.1 etcd—配置存储中心</h2><h2 id="2-2-主控-master-节点"><a href="#2-2-主控-master-节点" class="headerlink" title="2.2 主控(master)节点"></a>2.2 主控(master)节点</h2><h2 id="2-3-运算-node-节点"><a href="#2-3-运算-node-节点" class="headerlink" title="2.3 运算(node)节点"></a>2.3 运算(node)节点</h2><h2 id="2-4-核心客户端"><a href="#2-4-核心客户端" class="headerlink" title="2.4 核心客户端"></a>2.4 核心客户端</h2>]]></content>
      <categories>
        <category>tool</category>
        <category>k8s</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法</title>
    <url>/2021/04/18/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="1-快排"><a href="#1-快排" class="headerlink" title="1. 快排"></a>1. 快排</h2><p><a href="https://leetcode-cn.com/problems/sort-an-array/">Leet-code-912-排序数组</a></p>
<p>本文主要参考《算法导论》快排实现方式。</p>
<ol>
<li><p>整体框架</p>
<p>整体思路是<strong>分治+递归</strong>。选出基准值<strong>pivot</strong>，将数组分组基准值左侧小于基准值，右侧大于基准值。将两边分组递归排序。</p>
<p>代码框架如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> beginIdx, <span class="keyword">int</span> endIdx)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (beginIdx &lt; endIdx) &#123;</span><br><span class="line">        <span class="keyword">int</span> pivot = partition(nums, beginIdx, endIdx);</span><br><span class="line">        quickSort(nums, beginIdx, pivot - <span class="number">1</span>);</span><br><span class="line">        quickSort(nums, pivot + <span class="number">1</span>, endIdx);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>分组细节</p>
<p>默认选择最后一个作为基准值。</p>
<ol>
<li><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> beginIdx, <span class="keyword">int</span> endIdx)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pivot = nums[endIdx];</span><br><span class="line">    <span class="keyword">int</span> i = beginIdx - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = beginIdx; j &lt; endIdx; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[j] &lt;= pivot) &#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">int</span> temp = nums[i];</span><br><span class="line">            nums[i] = nums[j];</span><br><span class="line">            nums[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    nums[endIdx] = nums[i + <span class="number">1</span>];</span><br><span class="line">    nums[i + <span class="number">1</span>] = pivot;</span><br><span class="line">    <span class="keyword">return</span> i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
